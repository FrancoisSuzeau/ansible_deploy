---
- name: Update firewall rule on host
  hosts: "{{ hostname }}"
  gather_facts: false
  vars:
    path: "{{ path_to_firewall_rule_bck }}"
    script_name: extract_firewall_rule_to_json.py
    file_exist: false
    parsed_json:  []
    file_name:  ""
  tasks:

    - name: Role to delete previous backup directory
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: delete-folder.yml

    - name: Role to create folder {{ path }} 
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: create-folder.yml

    - name: Task to set ufw directory variable
      ansible.builtin.set_fact:
        path: "{{ path_to_firewall_rule_bck }}/ufw"
      delegate_to: localhost

    - name: Role to create folder {{ path }} 
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: create-folder.yml

    - name: Task to set src and dest ufw directory variable
      ansible.builtin.set_fact:
        src_path: /etc/ufw/
        dest_path: "{{ path_to_firewall_rule_bck }}/ufw"
      delegate_to: localhost

    - name: Role to copy folder {{ path }} 
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: copy-folder.yml

    - name: Role to make backup ipv4 and ipv6 rules
      include_role:
        name: "{{ system_os_type }}/firewall"
        tasks_from: make-backup.yml

    - name: Task to set path and ipv4 rule file variable
      ansible.builtin.set_fact:
        path: "{{ path_to_firewall_rule_bck }}"
        file_name: iptables-backup.rules
      delegate_to: localhost

    - name: Role to change permissions
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: change-file-permission.yml

    - name: Task to set ipv6 rule file variable
      ansible.builtin.set_fact:
        file_name: ip6tables-backup.rules
      delegate_to: localhost

    - name: Role to change permissions
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: change-file-permission.yml

    - name: Role to check python installation
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: check-python-installation.yml

    - name: Task to set pythons installer variable
      ansible.builtin.set_fact:
        package_name: "python{{ python_version_short }}"
      delegate_to: localhost
      when: is_python_not_installed

    - name: Role to update system
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: update.yml
      when: is_python_not_installed

    - name: Role to upgrade system
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: upgrade.yml
      when: is_python_not_installed

    - name: Role to reboot system after update
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: reboot.yml
      when: is_python_not_installed

    - name: Role to remove old packages
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: apt-remove.yml

    - name: Role to install python using apt
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: install-packages-using-apt.yml
      when: is_python_not_installed

    - name: Task to set path and script file name
      ansible.builtin.set_fact:
        file_name: "{{ script_name }}"
        path: "{{ path_to_firewall_rule_bck }}"
      delegate_to: localhost

    - name: Role to copy python script target host
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: copy-file.yml

    - name: Role to change permissions
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: change-file-permission.yml

    - name: "[TRY 1] Role to execute python script to list firewall rules"
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: execute-script.yml

    - name: Task to set allowed json extract firewall rule variable
      ansible.builtin.set_fact:
        file_name: ufw_rules_allow.json
        path: "{{ path_to_firewall_rule_bck }}"
        file_exist: false
      delegate_to: localhost

    - name: Role to check if allowed firewall rules json exist
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: check-file-exist.yml

    - name: Role to change permissions
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: change-file-permission.yml
      when: file_exist

    - name: Role to load json file
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: load-json-file.yml
      when: file_exist

    - name: Role to block firewall rules
      include_role:
        name: "{{ system_os_type }}/firewall"
        tasks_from: block-firewall-rules.yml
      when: file_exist

    - name: "[TRY 2] Role to execute python script to list firewall rules"
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: execute-script.yml

    - name: Task to set allowed json extract firewall rule variable
      ansible.builtin.set_fact:
        file_name: ufw_rules_allow.json
        path: "{{ path_to_firewall_rule_bck }}"
        file_exist: false
      delegate_to: localhost

    - name: Role to check if allowed firewall rules json exist
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: check-file-exist.yml

    - name: Role to change permissions
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: change-file-permission.yml
      when: file_exist

    - name: Task to set blocked json extract firewall rule variable
      ansible.builtin.set_fact:
        file_name: ufw_rules_deny.json
        path: "{{ path_to_firewall_rule_bck }}"
        file_exist: false
      delegate_to: localhost

    - name: Role to check if blocked firewall rules json exist
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: check-file-exist.yml

    - name: Role to change permissions
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: change-file-permission.yml
      when: file_exist

    - name: Role to load json file
      include_role:
        name: "{{ system_os_type }}/management"
        tasks_from: load-json-file.yml
      when: file_exist

    - name: Role to delete firewall rules
      include_role:
        name: "{{ system_os_type }}/firewall"
        tasks_from: delete-firewall-rules.yml
      loop: "{{ parsed_json }}"
      when: 
        - file_exist
        - item.Name is defined
        - firewall_to_keep is defined
        - item.Name not in firewall_to_keep
        - item.Action == "DENY"